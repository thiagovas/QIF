#ifndef _channel_vulnerability_vulnerability_h
#define _channel_vulnerability_vulnerability_h

#include "../channel.h"


namespace channel {
namespace vulnerability {

class Vulnerability {
  public:
    // V(X)
    virtual double VulnerabilityPrior(const Channel& channel) const = 0;
    
    // V(Y)
    virtual double VulnerabilityOut(const Channel& channel) const = 0;

    // V(X|Y)
    virtual double VulnerabilityPosterior(const Channel& channel) const = 0;

    // V(Y|X)
    virtual double VulnerabilityReversePosterior(const Channel& channel) const = 0;
  
    // Multiplicative Leakages.
    // V(X|Y) / V(X)
    double LeakageMultPosterior(const Channel& channel) const;
    
    // V(Y|X) / V(Y)
    double LeakageMultReversePosterior(const Channel& channel) const;
  
    // Additive leakages.
    // V(X|Y) - V(X)
    double LeakageAddPosterior(const Channel& channel) const;

    // V(Y|X) - V(Y)
    double LeakageAddReversePosterior(const Channel& channel) const;
  
  private:
};

} // namespace vulnerability
} // namespace channel


#endif
